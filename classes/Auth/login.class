<?php
use Firebase\JWT\JWT;
use Firebase\JWT\Key;

class LoginUser {
    private PDO $conn;
    private string $secretKey = 'my_super_secret_key_1234567890'; // Sample secret key (replace with a secure key)

    public function __construct(PDO $dbConnection) {
        $this->conn = $dbConnection;
    }
    public function login(array $request){
        $username = trim($request['username']);
        $password = trim($request['password']);
        
        $sql = "SELECT * FROM users WHERE username = :username";
        $stmt = $this->conn->prepare($sql);
        $stmt->bindParam(':username', $username, PDO::PARAM_STR);

        try {
            $stmt->execute();
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user && password_verify($password, $user['password'])) {
                // User authenticated, generate JWT
                $payload = [
                    'iat' => time(), // Issued at
                    'exp' => time() + 3600, // Expiration time (1 hour)
                    'sub' => $user['id'], // Subject (user ID)
                    'role'=> $user['role_id']
                ];

                $payload = json_encode($payload);
                $payload = base64_encode($payload);

                $signature = hash_hmac('sha256', "{$payload}", $key, true);
                $signature = base64_encode($signature);

                $token = "{$payload}.{$signature}";
                return ['status' => 'success', 'token' => $token, 'id'=>$user['id'],'role'=>$user['role_id'], 'username'=>$user['username']];
            } else {
                return ['status' => 'error', 'message' => 'Invalid credentials'];
            }
        } catch (PDOException $e) {
            return ['status' => 'error', 'message' => 'Database error: ' . $e->getMessage()];
        }
    }
}
?>

